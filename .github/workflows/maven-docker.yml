# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-jar:

    runs-on: ubuntu-latest

    outputs:
      jar_version: ${{ steps.get-version.outputs.jar_version }}

    steps:
      - uses: actions/checkout@v3
      - name: downcase REPO
        run: |
          echo "REPO=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          echo "REPO_NAME=${{ github.event.repository.name }}" >> ${GITHUB_ENV}
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Retrieve jar version
        id: get-version
        run: |
          MAVEN_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "jar_version=${MAVEN_VERSION}" >> $GITHUB_OUTPUT
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPO_NAME }}-jar-artifact
          path: ${{ github.workspace }}/target/*.jar
          retention-days: 1

  build-docker-image:
    permissions:
      contents: read
      packages: write

    runs-on: ubuntu-latest
    needs: build-jar

    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'
      - name: downcase REPO
        run: |
          echo "REPO=${IMAGE_NAME,,}" >> ${GITHUB_ENV}
          echo "REPO_NAME=${{ github.event.repository.name }}" >> ${GITHUB_ENV}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v1
        with:
          name: ${{ env.REPO_NAME }}-jar-artifact
          path: target/
      - run: pwd .
      - run: ls target
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: "linux/amd64,linux/arm64"
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO }}:${{needs.build-jar.outputs.jar_version}} , ${{ env.REGISTRY }}/${{ env.REPO }}:${{ github.sha }} , ${{ env.REGISTRY }}/${{ env.REPO }}:latest
